// Generated by CoffeeScript 1.7.1
var DROPBOX_APP_KEY, client;

DROPBOX_APP_KEY = 'n5z7guvmh1xril9';

client = new Dropbox.Client({
  key: DROPBOX_APP_KEY
});

Ram.Data = EventDispatcher.extend({
  init: function(callback) {
    var self;
    self = this;
    client.authenticate({
      interactive: false
    }, function(error) {
      if (error) {
        return alert('Authentication error: ' + error);
      }
    });
    if (client.isAuthenticated()) {
      return client.getDatastoreManager().openDefaultDatastore(function(error, datastore) {
        if (error) {
          alert('Error opening default datastore: ' + error);
        }
        self.itemsTable = datastore.getTable('items');
        datastore.recordsChanged.addListener(function(e) {
          console.log('db updated', e);
          return self.fire('itemChanged', e);
        });
        if (callback) {
          return callback(null, self);
        }
      });
    }
  },
  loadItems: function(callback) {},
  getChildren: function(parentId) {
    var items;
    return items = this.itemsTable.query({
      parentId: parentId
    });
  },
  onChange: function(change) {},
  addItem: function(item) {
    console.log('Data.addItem');
    console.log(self.itemsTable);
    return this.itemsTable.insert(item);
  },
  updateItem: function(item) {
    return item.set('text', item.tmpText);
  },
  removeItemById: function(itemid) {},
  removeItem: function(item) {}
});
