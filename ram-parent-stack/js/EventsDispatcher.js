// Generated by CoffeeScript 1.6.2
var EventDispatcher;

EventDispatcher = {
  extend: function(context) {
    var dispatcherInterface, methodName, subscribers;

    subscribers = {};
    dispatcherInterface = {
      addEventListener: function(type, handler) {
        if (!subscribers[type]) {
          subscribers[type] = [];
        }
        return subscribers[type].push(handler);
      },
      removeEventListener: function(type, handler) {
        var idx;

        idx = subscribers[type].indeOf(handler);
        if (idx > -1) {
          return subscribers[type].splice(idx, 1);
        }
      },
      fire: function(type, arg) {
        var i, _i, _ref, _results;

        if (subscribers[type]) {
          _results = [];
          for (i = _i = 0, _ref = subscribers[type].length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
            _results.push(subscribers[type][i].call(this, arg));
          }
          return _results;
        }
      }
    };
    for (methodName in dispatcherInterface) {
      context[methodName] = dispatcherInterface[methodName];
    }
    return context;
  }
};
